{"id":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","dependencies":[{"name":"/home/spinalcom/Desktop/multi-maquette/preventive/spinal-browser-preventive-task/package.json","includedInParent":true,"mtime":1567418505348},{"name":"/home/spinalcom/Desktop/multi-maquette/node_modules/spinal-env-viewer-plugin-forge/package.json","includedInParent":true,"mtime":1567073730162},{"name":"spinal-core-connectorjs_type","loc":{"line":3,"column":45},"parent":"/home/spinalcom/Desktop/multi-maquette/node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","resolved":"/home/spinalcom/Desktop/multi-maquette/node_modules/spinal-core-connectorjs_type/dist/SpinalModel.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar spinal_core_connectorjs_type_1 = require(\"spinal-core-connectorjs_type\");\nvar mapModelDictionary = new Map();\nfunction loadModelPtr(model) {\n    if (model instanceof spinal_core_connectorjs_type_1.File) {\n        return loadModelPtr(model._ptr);\n    }\n    if (!(model instanceof spinal_core_connectorjs_type_1.Ptr)) {\n        throw new Error('loadModelPtr must take Ptr as parameter');\n    }\n    if (!model.data.value && model.data.model) {\n        return Promise.resolve(model.data.model);\n    }\n    else if (!model.data.value) {\n        throw new Error('Trying to load a Ptr to 0');\n    }\n    if (mapModelDictionary.has(model.data.value)) {\n        return mapModelDictionary.get(model.data.value);\n    }\n    if (typeof spinal_core_connectorjs_type_1.FileSystem._objects[model.data.value] !== 'undefined') {\n        var promise_1 = Promise.resolve(spinal_core_connectorjs_type_1.FileSystem._objects[model.data.value]);\n        mapModelDictionary.set(model.data.value, promise_1);\n        return promise_1;\n    }\n    var promise = new Promise(function (resolve, reject) {\n        model.load(function (m) {\n            if (!m) {\n                mapModelDictionary.delete(model.data.value);\n                reject(new Error('Error in load Ptr'));\n            }\n            else {\n                resolve(m);\n            }\n        });\n    });\n    mapModelDictionary.set(model.data.value, promise);\n    return promise;\n}\nexports.loadModelPtr = loadModelPtr;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}}],"sources":{"../../../node_modules/spinal-env-viewer-plugin-forge/dist/utils.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar spinal_core_connectorjs_type_1 = require(\"spinal-core-connectorjs_type\");\nvar mapModelDictionary = new Map();\nfunction loadModelPtr(model) {\n    if (model instanceof spinal_core_connectorjs_type_1.File) {\n        return loadModelPtr(model._ptr);\n    }\n    if (!(model instanceof spinal_core_connectorjs_type_1.Ptr)) {\n        throw new Error('loadModelPtr must take Ptr as parameter');\n    }\n    if (!model.data.value && model.data.model) {\n        return Promise.resolve(model.data.model);\n    }\n    else if (!model.data.value) {\n        throw new Error('Trying to load a Ptr to 0');\n    }\n    if (mapModelDictionary.has(model.data.value)) {\n        return mapModelDictionary.get(model.data.value);\n    }\n    if (typeof spinal_core_connectorjs_type_1.FileSystem._objects[model.data.value] !== 'undefined') {\n        var promise_1 = Promise.resolve(spinal_core_connectorjs_type_1.FileSystem._objects[model.data.value]);\n        mapModelDictionary.set(model.data.value, promise_1);\n        return promise_1;\n    }\n    var promise = new Promise(function (resolve, reject) {\n        model.load(function (m) {\n            if (!m) {\n                mapModelDictionary.delete(model.data.value);\n                reject(new Error('Error in load Ptr'));\n            }\n            else {\n                resolve(m);\n            }\n        });\n    });\n    mapModelDictionary.set(model.data.value, promise);\n    return promise;\n}\nexports.loadModelPtr = loadModelPtr;\n"},"lineCount":41}},"error":null,"hash":"fad7cd5b1f45491c5e114a2ca81a1224","cacheData":{"env":{}}}