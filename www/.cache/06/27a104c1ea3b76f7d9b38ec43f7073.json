{"id":"../../../node_modules/elliptic/package.json","dependencies":[{"name":"/home/spinalcom/Desktop/multi-maquette/preventive/spinal-browser-preventive-task/package.json","includedInParent":true,"mtime":1567517512841},{"name":"/home/spinalcom/Desktop/multi-maquette/node_modules/elliptic/package.json","includedInParent":true,"mtime":1567073691731}],"generated":{"js":"module.exports = {\n  \"_args\": [\n    [\n      {\n        \"raw\": \"elliptic@^6.0.0\",\n        \"scope\": null,\n        \"escapedName\": \"elliptic\",\n        \"name\": \"elliptic\",\n        \"rawSpec\": \"^6.0.0\",\n        \"spec\": \">=6.0.0 <7.0.0\",\n        \"type\": \"range\"\n      },\n      \"/home/spinalcom/Desktop/multi-maquette/node_modules/browserify-sign\"\n    ]\n  ],\n  \"_from\": \"elliptic@^6.0.0\",\n  \"_hasShrinkwrap\": false,\n  \"_id\": \"elliptic@6.5.0\",\n  \"_location\": \"/elliptic\",\n  \"_nodeVersion\": \"12.2.0\",\n  \"_npmOperationalInternal\": {\n    \"host\": \"s3://npm-registry-packages\",\n    \"tmp\": \"tmp/elliptic_6.5.0_1561521826385_0.20848274510512943\"\n  },\n  \"_npmUser\": {\n    \"name\": \"indutny\",\n    \"email\": \"fedor@indutny.com\"\n  },\n  \"_npmVersion\": \"6.9.0\",\n  \"_phantomChildren\": {},\n  \"_requested\": {\n    \"raw\": \"elliptic@^6.0.0\",\n    \"scope\": null,\n    \"escapedName\": \"elliptic\",\n    \"name\": \"elliptic\",\n    \"rawSpec\": \"^6.0.0\",\n    \"spec\": \">=6.0.0 <7.0.0\",\n    \"type\": \"range\"\n  },\n  \"_requiredBy\": [\n    \"/browserify-sign\",\n    \"/create-ecdh\"\n  ],\n  \"_resolved\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.5.0.tgz\",\n  \"_shasum\": \"2b8ed4c891b7de3200e14412a5b8248c7af505ca\",\n  \"_shrinkwrap\": null,\n  \"_spec\": \"elliptic@^6.0.0\",\n  \"_where\": \"/home/spinalcom/Desktop/multi-maquette/node_modules/browserify-sign\",\n  \"author\": {\n    \"name\": \"Fedor Indutny\",\n    \"email\": \"fedor@indutny.com\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/indutny/elliptic/issues\"\n  },\n  \"dependencies\": {\n    \"bn.js\": \"^4.4.0\",\n    \"brorand\": \"^1.0.1\",\n    \"hash.js\": \"^1.0.0\",\n    \"hmac-drbg\": \"^1.0.0\",\n    \"inherits\": \"^2.0.1\",\n    \"minimalistic-assert\": \"^1.0.0\",\n    \"minimalistic-crypto-utils\": \"^1.0.0\"\n  },\n  \"description\": \"EC cryptography\",\n  \"devDependencies\": {\n    \"brfs\": \"^1.4.3\",\n    \"coveralls\": \"^2.11.3\",\n    \"grunt\": \"^0.4.5\",\n    \"grunt-browserify\": \"^5.0.0\",\n    \"grunt-cli\": \"^1.2.0\",\n    \"grunt-contrib-connect\": \"^1.0.0\",\n    \"grunt-contrib-copy\": \"^1.0.0\",\n    \"grunt-contrib-uglify\": \"^1.0.1\",\n    \"grunt-mocha-istanbul\": \"^3.0.1\",\n    \"grunt-saucelabs\": \"^8.6.2\",\n    \"istanbul\": \"^0.4.2\",\n    \"jscs\": \"^2.9.0\",\n    \"jshint\": \"^2.6.0\",\n    \"mocha\": \"^2.1.0\"\n  },\n  \"directories\": {},\n  \"dist\": {\n    \"integrity\": \"sha512-eFOJTMyCYb7xtE/caJ6JJu+bhi67WCYNbkGSknu20pmM8Ke/bqOfdnZWxyoGN26JgfxTbXrsCkEw4KheCT/KGg==\",\n    \"shasum\": \"2b8ed4c891b7de3200e14412a5b8248c7af505ca\",\n    \"tarball\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.5.0.tgz\",\n    \"fileCount\": 17,\n    \"unpackedSize\": 118006,\n    \"npm-signature\": \"-----BEGIN PGP SIGNATURE-----\\r\\nVersion: OpenPGP.js v3.0.4\\r\\nComment: https://openpgpjs.org\\r\\n\\r\\nwsFcBAEBCAAQBQJdEu6jCRA9TVsSAnZWagAAJh4QAJXJ18MReidNMHrxFJGv\\ngSONMB2uz0lWJ7eEUyggaCA/Tr6w4RBA6Ilne0Wou3jTAGou+GClpAde6Hkb\\nEq1iq1brx+5gHeY3rGs8GB+T3c1JsVz+2t6934esXGM6IJNmG91TaCMSbuwQ\\nTWHD62RxFylLYjffBIWt6KLximZnXcvAES0Qu7VUql1SlfvmGtaHlQAhvtLj\\nG+ayBnSnWMcEvDPJdfnKi67PlGMa334spEmWzcqobFySr+y/ufiZRCp+wiSl\\ndCwbFNMaH4fue+dhq1m7jGO/euFQvJw2Jf32zT/ToaM768nH8yHrrZ8lMRjs\\ngCUymge8kbI5W1WA8wla7+J52Exbo6LbcBqSupVhVw6gXkOdjQCOkywBXa1c\\nPiFxwOUSfdFATpkUi3/8serYCgv9NgGzvQ0rjej0//1+he6q7UUyKn9wyrdH\\nMntmi18UgyQ8c1NrshKAOCb1oeniCEv7B1adfH2axH9uvMiVP8N5BMfAUNE1\\nnkCD3lDXRz/7C+90DiI+h2MS3+az8ciqMTbpKlw3HrmUyCex+KvLq9+wNLGf\\nyaJGd/r6NT0pu36v0M2+ul266/RbbY6D1ED/cl8gDZRFTT/SfTCkU+QAn2Mg\\nfAlnn9BXogYR1XM1GNrnGUVkY7ngORiAGez5DU7P93jMpdSS9OtwAHHi1Oto\\nbZ+X\\r\\n=LuMF\\r\\n-----END PGP SIGNATURE-----\\r\\n\"\n  },\n  \"files\": [\n    \"lib\"\n  ],\n  \"gitHead\": \"475f066aebd14681591f0f0f18a2abc0ded8c390\",\n  \"homepage\": \"https://github.com/indutny/elliptic\",\n  \"keywords\": [\n    \"EC\",\n    \"Elliptic\",\n    \"curve\",\n    \"Cryptography\"\n  ],\n  \"license\": \"MIT\",\n  \"main\": \"lib/elliptic.js\",\n  \"maintainers\": [\n    {\n      \"name\": \"indutny\",\n      \"email\": \"fedor@indutny.com\"\n    }\n  ],\n  \"name\": \"elliptic\",\n  \"optionalDependencies\": {},\n  \"readme\": \"# Elliptic [![Build Status](https://secure.travis-ci.org/indutny/elliptic.png)](http://travis-ci.org/indutny/elliptic) [![Coverage Status](https://coveralls.io/repos/indutny/elliptic/badge.svg?branch=master&service=github)](https://coveralls.io/github/indutny/elliptic?branch=master) [![Code Climate](https://codeclimate.com/github/indutny/elliptic/badges/gpa.svg)](https://codeclimate.com/github/indutny/elliptic)\\n\\n[![Saucelabs Test Status](https://saucelabs.com/browser-matrix/gh-indutny-elliptic.svg)](https://saucelabs.com/u/gh-indutny-elliptic)\\n\\nFast elliptic-curve cryptography in a plain javascript implementation.\\n\\nNOTE: Please take a look at http://safecurves.cr.yp.to/ before choosing a curve\\nfor your cryptography operations.\\n\\n## Incentive\\n\\nECC is much slower than regular RSA cryptography, the JS implementations are\\neven more slower.\\n\\n## Benchmarks\\n\\n```bash\\n$ node benchmarks/index.js\\nBenchmarking: sign\\nelliptic#sign x 262 ops/sec ±0.51% (177 runs sampled)\\neccjs#sign x 55.91 ops/sec ±0.90% (144 runs sampled)\\n------------------------\\nFastest is elliptic#sign\\n========================\\nBenchmarking: verify\\nelliptic#verify x 113 ops/sec ±0.50% (166 runs sampled)\\neccjs#verify x 48.56 ops/sec ±0.36% (125 runs sampled)\\n------------------------\\nFastest is elliptic#verify\\n========================\\nBenchmarking: gen\\nelliptic#gen x 294 ops/sec ±0.43% (176 runs sampled)\\neccjs#gen x 62.25 ops/sec ±0.63% (129 runs sampled)\\n------------------------\\nFastest is elliptic#gen\\n========================\\nBenchmarking: ecdh\\nelliptic#ecdh x 136 ops/sec ±0.85% (156 runs sampled)\\n------------------------\\nFastest is elliptic#ecdh\\n========================\\n```\\n\\n## API\\n\\n### ECDSA\\n\\n```javascript\\nvar EC = require('elliptic').ec;\\n\\n// Create and initialize EC context\\n// (better do it once and reuse it)\\nvar ec = new EC('secp256k1');\\n\\n// Generate keys\\nvar key = ec.genKeyPair();\\n\\n// Sign the message's hash (input must be an array, or a hex-string)\\nvar msgHash = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ];\\nvar signature = key.sign(msgHash);\\n\\n// Export DER encoded signature in Array\\nvar derSign = signature.toDER();\\n\\n// Verify signature\\nconsole.log(key.verify(msgHash, derSign));\\n\\n// CHECK WITH NO PRIVATE KEY\\n\\nvar pubPoint = key.getPublic();\\nvar x = pubPoint.getX();\\nvar y = pubPoint.getY();\\n\\n// Public Key MUST be either:\\n// 1) '04' + hex string of x + hex string of y; or\\n// 2) object with two hex string properties (x and y); or\\n// 3) object with two buffer properties (x and y)\\nvar pub = pubPoint.encode('hex');                                 // case 1\\nvar pub = { x: x.toString('hex'), y: y.toString('hex') };         // case 2\\nvar pub = { x: x.toBuffer(), y: y.toBuffer() };                   // case 3\\nvar pub = { x: x.toArrayLike(Buffer), y: y.toArrayLike(Buffer) }; // case 3\\n\\n// Import public key\\nvar key = ec.keyFromPublic(pub, 'hex');\\n\\n// Signature MUST be either:\\n// 1) DER-encoded signature as hex-string; or\\n// 2) DER-encoded signature as buffer; or\\n// 3) object with two hex-string properties (r and s); or\\n// 4) object with two buffer properties (r and s)\\n\\nvar signature = '3046022100...'; // case 1\\nvar signature = new Buffer('...'); // case 2\\nvar signature = { r: 'b1fc...', s: '9c42...' }; // case 3\\n\\n// Verify signature\\nconsole.log(key.verify(msgHash, signature));\\n```\\n\\n### EdDSA\\n\\n```javascript\\nvar EdDSA = require('elliptic').eddsa;\\n\\n// Create and initialize EdDSA context\\n// (better do it once and reuse it)\\nvar ec = new EdDSA('ed25519');\\n\\n// Create key pair from secret\\nvar key = ec.keyFromSecret('693e3c...'); // hex string, array or Buffer\\n\\n// Sign the message's hash (input must be an array, or a hex-string)\\nvar msgHash = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ];\\nvar signature = key.sign(msgHash).toHex();\\n\\n// Verify signature\\nconsole.log(key.verify(msgHash, signature));\\n\\n// CHECK WITH NO PRIVATE KEY\\n\\n// Import public key\\nvar pub = '0a1af638...';\\nvar key = ec.keyFromPublic(pub, 'hex');\\n\\n// Verify signature\\nvar signature = '70bed1...';\\nconsole.log(key.verify(msgHash, signature));\\n```\\n\\n### ECDH\\n\\n```javascript\\nvar EC = require('elliptic').ec;\\nvar ec = new EC('curve25519');\\n\\n// Generate keys\\nvar key1 = ec.genKeyPair();\\nvar key2 = ec.genKeyPair();\\n\\nvar shared1 = key1.derive(key2.getPublic());\\nvar shared2 = key2.derive(key1.getPublic());\\n\\nconsole.log('Both shared secrets are BN instances');\\nconsole.log(shared1.toString(16));\\nconsole.log(shared2.toString(16));\\n```\\n\\nthree and more members:\\n```javascript\\nvar EC = require('elliptic').ec;\\nvar ec = new EC('curve25519');\\n\\nvar A = ec.genKeyPair();\\nvar B = ec.genKeyPair();\\nvar C = ec.genKeyPair();\\n\\nvar AB = A.getPublic().mul(B.getPrivate())\\nvar BC = B.getPublic().mul(C.getPrivate())\\nvar CA = C.getPublic().mul(A.getPrivate())\\n\\nvar ABC = AB.mul(C.getPrivate())\\nvar BCA = BC.mul(A.getPrivate())\\nvar CAB = CA.mul(B.getPrivate())\\n\\nconsole.log(ABC.getX().toString(16))\\nconsole.log(BCA.getX().toString(16))\\nconsole.log(CAB.getX().toString(16))\\n```\\n\\nNOTE: `.derive()` returns a [BN][1] instance.\\n\\n## Supported curves\\n\\nElliptic.js support following curve types:\\n\\n* Short Weierstrass\\n* Montgomery\\n* Edwards\\n* Twisted Edwards\\n\\nFollowing curve 'presets' are embedded into the library:\\n\\n* `secp256k1`\\n* `p192`\\n* `p224`\\n* `p256`\\n* `p384`\\n* `p521`\\n* `curve25519`\\n* `ed25519`\\n\\nNOTE: That `curve25519` could not be used for ECDSA, use `ed25519` instead.\\n\\n### Implementation details\\n\\nECDSA is using deterministic `k` value generation as per [RFC6979][0]. Most of\\nthe curve operations are performed on non-affine coordinates (either projective\\nor extended), various windowing techniques are used for different cases.\\n\\nAll operations are performed in reduction context using [bn.js][1], hashing is\\nprovided by [hash.js][2]\\n\\n### Related projects\\n\\n* [eccrypto][3]: isomorphic implementation of ECDSA, ECDH and ECIES for both\\n  browserify and node (uses `elliptic` for browser and [secp256k1-node][4] for\\n  node)\\n\\n#### LICENSE\\n\\nThis software is licensed under the MIT License.\\n\\nCopyright Fedor Indutny, 2014.\\n\\nPermission is hereby granted, free of charge, to any person obtaining a\\ncopy of this software and associated documentation files (the\\n\\\"Software\\\"), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to permit\\npersons to whom the Software is furnished to do so, subject to the\\nfollowing conditions:\\n\\nThe above copyright notice and this permission notice shall be included\\nin all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\nNO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\nUSE OR OTHER DEALINGS IN THE SOFTWARE.\\n\\n[0]: http://tools.ietf.org/html/rfc6979\\n[1]: https://github.com/indutny/bn.js\\n[2]: https://github.com/indutny/hash.js\\n[3]: https://github.com/bitchan/eccrypto\\n[4]: https://github.com/wanderer/secp256k1-node\\n\",\n  \"readmeFilename\": \"README.md\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+ssh://git@github.com/indutny/elliptic.git\"\n  },\n  \"scripts\": {\n    \"jscs\": \"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\n    \"jshint\": \"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\n    \"lint\": \"npm run jscs && npm run jshint\",\n    \"test\": \"npm run lint && npm run unit\",\n    \"unit\": \"istanbul test _mocha --reporter=spec test/index.js\",\n    \"version\": \"grunt dist && git add dist/\"\n  },\n  \"version\": \"6.5.0\"\n}\n;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/elliptic/package.json","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../../node_modules/elliptic/package.json","original":{"line":128,"column":0},"generated":{"line":128,"column":0}}],"sources":{"../../../node_modules/elliptic/package.json":"module.exports = {\n  \"_args\": [\n    [\n      {\n        \"raw\": \"elliptic@^6.0.0\",\n        \"scope\": null,\n        \"escapedName\": \"elliptic\",\n        \"name\": \"elliptic\",\n        \"rawSpec\": \"^6.0.0\",\n        \"spec\": \">=6.0.0 <7.0.0\",\n        \"type\": \"range\"\n      },\n      \"/home/spinalcom/Desktop/multi-maquette/node_modules/browserify-sign\"\n    ]\n  ],\n  \"_from\": \"elliptic@^6.0.0\",\n  \"_hasShrinkwrap\": false,\n  \"_id\": \"elliptic@6.5.0\",\n  \"_location\": \"/elliptic\",\n  \"_nodeVersion\": \"12.2.0\",\n  \"_npmOperationalInternal\": {\n    \"host\": \"s3://npm-registry-packages\",\n    \"tmp\": \"tmp/elliptic_6.5.0_1561521826385_0.20848274510512943\"\n  },\n  \"_npmUser\": {\n    \"name\": \"indutny\",\n    \"email\": \"fedor@indutny.com\"\n  },\n  \"_npmVersion\": \"6.9.0\",\n  \"_phantomChildren\": {},\n  \"_requested\": {\n    \"raw\": \"elliptic@^6.0.0\",\n    \"scope\": null,\n    \"escapedName\": \"elliptic\",\n    \"name\": \"elliptic\",\n    \"rawSpec\": \"^6.0.0\",\n    \"spec\": \">=6.0.0 <7.0.0\",\n    \"type\": \"range\"\n  },\n  \"_requiredBy\": [\n    \"/browserify-sign\",\n    \"/create-ecdh\"\n  ],\n  \"_resolved\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.5.0.tgz\",\n  \"_shasum\": \"2b8ed4c891b7de3200e14412a5b8248c7af505ca\",\n  \"_shrinkwrap\": null,\n  \"_spec\": \"elliptic@^6.0.0\",\n  \"_where\": \"/home/spinalcom/Desktop/multi-maquette/node_modules/browserify-sign\",\n  \"author\": {\n    \"name\": \"Fedor Indutny\",\n    \"email\": \"fedor@indutny.com\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/indutny/elliptic/issues\"\n  },\n  \"dependencies\": {\n    \"bn.js\": \"^4.4.0\",\n    \"brorand\": \"^1.0.1\",\n    \"hash.js\": \"^1.0.0\",\n    \"hmac-drbg\": \"^1.0.0\",\n    \"inherits\": \"^2.0.1\",\n    \"minimalistic-assert\": \"^1.0.0\",\n    \"minimalistic-crypto-utils\": \"^1.0.0\"\n  },\n  \"description\": \"EC cryptography\",\n  \"devDependencies\": {\n    \"brfs\": \"^1.4.3\",\n    \"coveralls\": \"^2.11.3\",\n    \"grunt\": \"^0.4.5\",\n    \"grunt-browserify\": \"^5.0.0\",\n    \"grunt-cli\": \"^1.2.0\",\n    \"grunt-contrib-connect\": \"^1.0.0\",\n    \"grunt-contrib-copy\": \"^1.0.0\",\n    \"grunt-contrib-uglify\": \"^1.0.1\",\n    \"grunt-mocha-istanbul\": \"^3.0.1\",\n    \"grunt-saucelabs\": \"^8.6.2\",\n    \"istanbul\": \"^0.4.2\",\n    \"jscs\": \"^2.9.0\",\n    \"jshint\": \"^2.6.0\",\n    \"mocha\": \"^2.1.0\"\n  },\n  \"directories\": {},\n  \"dist\": {\n    \"integrity\": \"sha512-eFOJTMyCYb7xtE/caJ6JJu+bhi67WCYNbkGSknu20pmM8Ke/bqOfdnZWxyoGN26JgfxTbXrsCkEw4KheCT/KGg==\",\n    \"shasum\": \"2b8ed4c891b7de3200e14412a5b8248c7af505ca\",\n    \"tarball\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.5.0.tgz\",\n    \"fileCount\": 17,\n    \"unpackedSize\": 118006,\n    \"npm-signature\": \"-----BEGIN PGP SIGNATURE-----\\r\\nVersion: OpenPGP.js v3.0.4\\r\\nComment: https://openpgpjs.org\\r\\n\\r\\nwsFcBAEBCAAQBQJdEu6jCRA9TVsSAnZWagAAJh4QAJXJ18MReidNMHrxFJGv\\ngSONMB2uz0lWJ7eEUyggaCA/Tr6w4RBA6Ilne0Wou3jTAGou+GClpAde6Hkb\\nEq1iq1brx+5gHeY3rGs8GB+T3c1JsVz+2t6934esXGM6IJNmG91TaCMSbuwQ\\nTWHD62RxFylLYjffBIWt6KLximZnXcvAES0Qu7VUql1SlfvmGtaHlQAhvtLj\\nG+ayBnSnWMcEvDPJdfnKi67PlGMa334spEmWzcqobFySr+y/ufiZRCp+wiSl\\ndCwbFNMaH4fue+dhq1m7jGO/euFQvJw2Jf32zT/ToaM768nH8yHrrZ8lMRjs\\ngCUymge8kbI5W1WA8wla7+J52Exbo6LbcBqSupVhVw6gXkOdjQCOkywBXa1c\\nPiFxwOUSfdFATpkUi3/8serYCgv9NgGzvQ0rjej0//1+he6q7UUyKn9wyrdH\\nMntmi18UgyQ8c1NrshKAOCb1oeniCEv7B1adfH2axH9uvMiVP8N5BMfAUNE1\\nnkCD3lDXRz/7C+90DiI+h2MS3+az8ciqMTbpKlw3HrmUyCex+KvLq9+wNLGf\\nyaJGd/r6NT0pu36v0M2+ul266/RbbY6D1ED/cl8gDZRFTT/SfTCkU+QAn2Mg\\nfAlnn9BXogYR1XM1GNrnGUVkY7ngORiAGez5DU7P93jMpdSS9OtwAHHi1Oto\\nbZ+X\\r\\n=LuMF\\r\\n-----END PGP SIGNATURE-----\\r\\n\"\n  },\n  \"files\": [\n    \"lib\"\n  ],\n  \"gitHead\": \"475f066aebd14681591f0f0f18a2abc0ded8c390\",\n  \"homepage\": \"https://github.com/indutny/elliptic\",\n  \"keywords\": [\n    \"EC\",\n    \"Elliptic\",\n    \"curve\",\n    \"Cryptography\"\n  ],\n  \"license\": \"MIT\",\n  \"main\": \"lib/elliptic.js\",\n  \"maintainers\": [\n    {\n      \"name\": \"indutny\",\n      \"email\": \"fedor@indutny.com\"\n    }\n  ],\n  \"name\": \"elliptic\",\n  \"optionalDependencies\": {},\n  \"readme\": \"# Elliptic [![Build Status](https://secure.travis-ci.org/indutny/elliptic.png)](http://travis-ci.org/indutny/elliptic) [![Coverage Status](https://coveralls.io/repos/indutny/elliptic/badge.svg?branch=master&service=github)](https://coveralls.io/github/indutny/elliptic?branch=master) [![Code Climate](https://codeclimate.com/github/indutny/elliptic/badges/gpa.svg)](https://codeclimate.com/github/indutny/elliptic)\\n\\n[![Saucelabs Test Status](https://saucelabs.com/browser-matrix/gh-indutny-elliptic.svg)](https://saucelabs.com/u/gh-indutny-elliptic)\\n\\nFast elliptic-curve cryptography in a plain javascript implementation.\\n\\nNOTE: Please take a look at http://safecurves.cr.yp.to/ before choosing a curve\\nfor your cryptography operations.\\n\\n## Incentive\\n\\nECC is much slower than regular RSA cryptography, the JS implementations are\\neven more slower.\\n\\n## Benchmarks\\n\\n```bash\\n$ node benchmarks/index.js\\nBenchmarking: sign\\nelliptic#sign x 262 ops/sec ±0.51% (177 runs sampled)\\neccjs#sign x 55.91 ops/sec ±0.90% (144 runs sampled)\\n------------------------\\nFastest is elliptic#sign\\n========================\\nBenchmarking: verify\\nelliptic#verify x 113 ops/sec ±0.50% (166 runs sampled)\\neccjs#verify x 48.56 ops/sec ±0.36% (125 runs sampled)\\n------------------------\\nFastest is elliptic#verify\\n========================\\nBenchmarking: gen\\nelliptic#gen x 294 ops/sec ±0.43% (176 runs sampled)\\neccjs#gen x 62.25 ops/sec ±0.63% (129 runs sampled)\\n------------------------\\nFastest is elliptic#gen\\n========================\\nBenchmarking: ecdh\\nelliptic#ecdh x 136 ops/sec ±0.85% (156 runs sampled)\\n------------------------\\nFastest is elliptic#ecdh\\n========================\\n```\\n\\n## API\\n\\n### ECDSA\\n\\n```javascript\\nvar EC = require('elliptic').ec;\\n\\n// Create and initialize EC context\\n// (better do it once and reuse it)\\nvar ec = new EC('secp256k1');\\n\\n// Generate keys\\nvar key = ec.genKeyPair();\\n\\n// Sign the message's hash (input must be an array, or a hex-string)\\nvar msgHash = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ];\\nvar signature = key.sign(msgHash);\\n\\n// Export DER encoded signature in Array\\nvar derSign = signature.toDER();\\n\\n// Verify signature\\nconsole.log(key.verify(msgHash, derSign));\\n\\n// CHECK WITH NO PRIVATE KEY\\n\\nvar pubPoint = key.getPublic();\\nvar x = pubPoint.getX();\\nvar y = pubPoint.getY();\\n\\n// Public Key MUST be either:\\n// 1) '04' + hex string of x + hex string of y; or\\n// 2) object with two hex string properties (x and y); or\\n// 3) object with two buffer properties (x and y)\\nvar pub = pubPoint.encode('hex');                                 // case 1\\nvar pub = { x: x.toString('hex'), y: y.toString('hex') };         // case 2\\nvar pub = { x: x.toBuffer(), y: y.toBuffer() };                   // case 3\\nvar pub = { x: x.toArrayLike(Buffer), y: y.toArrayLike(Buffer) }; // case 3\\n\\n// Import public key\\nvar key = ec.keyFromPublic(pub, 'hex');\\n\\n// Signature MUST be either:\\n// 1) DER-encoded signature as hex-string; or\\n// 2) DER-encoded signature as buffer; or\\n// 3) object with two hex-string properties (r and s); or\\n// 4) object with two buffer properties (r and s)\\n\\nvar signature = '3046022100...'; // case 1\\nvar signature = new Buffer('...'); // case 2\\nvar signature = { r: 'b1fc...', s: '9c42...' }; // case 3\\n\\n// Verify signature\\nconsole.log(key.verify(msgHash, signature));\\n```\\n\\n### EdDSA\\n\\n```javascript\\nvar EdDSA = require('elliptic').eddsa;\\n\\n// Create and initialize EdDSA context\\n// (better do it once and reuse it)\\nvar ec = new EdDSA('ed25519');\\n\\n// Create key pair from secret\\nvar key = ec.keyFromSecret('693e3c...'); // hex string, array or Buffer\\n\\n// Sign the message's hash (input must be an array, or a hex-string)\\nvar msgHash = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ];\\nvar signature = key.sign(msgHash).toHex();\\n\\n// Verify signature\\nconsole.log(key.verify(msgHash, signature));\\n\\n// CHECK WITH NO PRIVATE KEY\\n\\n// Import public key\\nvar pub = '0a1af638...';\\nvar key = ec.keyFromPublic(pub, 'hex');\\n\\n// Verify signature\\nvar signature = '70bed1...';\\nconsole.log(key.verify(msgHash, signature));\\n```\\n\\n### ECDH\\n\\n```javascript\\nvar EC = require('elliptic').ec;\\nvar ec = new EC('curve25519');\\n\\n// Generate keys\\nvar key1 = ec.genKeyPair();\\nvar key2 = ec.genKeyPair();\\n\\nvar shared1 = key1.derive(key2.getPublic());\\nvar shared2 = key2.derive(key1.getPublic());\\n\\nconsole.log('Both shared secrets are BN instances');\\nconsole.log(shared1.toString(16));\\nconsole.log(shared2.toString(16));\\n```\\n\\nthree and more members:\\n```javascript\\nvar EC = require('elliptic').ec;\\nvar ec = new EC('curve25519');\\n\\nvar A = ec.genKeyPair();\\nvar B = ec.genKeyPair();\\nvar C = ec.genKeyPair();\\n\\nvar AB = A.getPublic().mul(B.getPrivate())\\nvar BC = B.getPublic().mul(C.getPrivate())\\nvar CA = C.getPublic().mul(A.getPrivate())\\n\\nvar ABC = AB.mul(C.getPrivate())\\nvar BCA = BC.mul(A.getPrivate())\\nvar CAB = CA.mul(B.getPrivate())\\n\\nconsole.log(ABC.getX().toString(16))\\nconsole.log(BCA.getX().toString(16))\\nconsole.log(CAB.getX().toString(16))\\n```\\n\\nNOTE: `.derive()` returns a [BN][1] instance.\\n\\n## Supported curves\\n\\nElliptic.js support following curve types:\\n\\n* Short Weierstrass\\n* Montgomery\\n* Edwards\\n* Twisted Edwards\\n\\nFollowing curve 'presets' are embedded into the library:\\n\\n* `secp256k1`\\n* `p192`\\n* `p224`\\n* `p256`\\n* `p384`\\n* `p521`\\n* `curve25519`\\n* `ed25519`\\n\\nNOTE: That `curve25519` could not be used for ECDSA, use `ed25519` instead.\\n\\n### Implementation details\\n\\nECDSA is using deterministic `k` value generation as per [RFC6979][0]. Most of\\nthe curve operations are performed on non-affine coordinates (either projective\\nor extended), various windowing techniques are used for different cases.\\n\\nAll operations are performed in reduction context using [bn.js][1], hashing is\\nprovided by [hash.js][2]\\n\\n### Related projects\\n\\n* [eccrypto][3]: isomorphic implementation of ECDSA, ECDH and ECIES for both\\n  browserify and node (uses `elliptic` for browser and [secp256k1-node][4] for\\n  node)\\n\\n#### LICENSE\\n\\nThis software is licensed under the MIT License.\\n\\nCopyright Fedor Indutny, 2014.\\n\\nPermission is hereby granted, free of charge, to any person obtaining a\\ncopy of this software and associated documentation files (the\\n\\\"Software\\\"), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to permit\\npersons to whom the Software is furnished to do so, subject to the\\nfollowing conditions:\\n\\nThe above copyright notice and this permission notice shall be included\\nin all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\nNO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\nUSE OR OTHER DEALINGS IN THE SOFTWARE.\\n\\n[0]: http://tools.ietf.org/html/rfc6979\\n[1]: https://github.com/indutny/bn.js\\n[2]: https://github.com/indutny/hash.js\\n[3]: https://github.com/bitchan/eccrypto\\n[4]: https://github.com/wanderer/secp256k1-node\\n\",\n  \"readmeFilename\": \"README.md\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+ssh://git@github.com/indutny/elliptic.git\"\n  },\n  \"scripts\": {\n    \"jscs\": \"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\n    \"jshint\": \"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\n    \"lint\": \"npm run jscs && npm run jshint\",\n    \"test\": \"npm run lint && npm run unit\",\n    \"unit\": \"istanbul test _mocha --reporter=spec test/index.js\",\n    \"version\": \"grunt dist && git add dist/\"\n  },\n  \"version\": \"6.5.0\"\n}\n;"},"lineCount":128}},"error":null,"hash":"e05e514d1de61c7ed23cf0f7859808a6","cacheData":{"env":{}}}